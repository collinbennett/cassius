#!/usr/bin/python
import argparse
from cassius import *
from cassius.applications.ScorePlane import ScorePlane

parser = argparse.ArgumentParser(description="Plots AugustusPMMLConsumer output overlaid by data for two features.  AugustusPMMLConsumer must be on the PATH.")
parser.add_argument("csv", help="data points to plot as a CSV file")
parser.add_argument("pmml", help="scored regions to plot as a PMML file")
parser.add_argument("svg", help="fileName for SVG plot to create/overwrite")
parser.add_argument("featureX", help="feature to plot on the horizontal (X) axis")
parser.add_argument("featureY", help="feature to plot on the vertical (Y) axis")
parser.add_argument("--xmin", default=None, help="minimum X value to score/plot")
parser.add_argument("--xmax", default=None, help="maximum X value to score/plot")
parser.add_argument("--ymin", default=None, help="minimum Y value to score/plot")
parser.add_argument("--ymax", default=None, help="maximum Y value to score/plot")
parser.add_argument("--at", nargs="*", default=[], help="values for the features that are not drawn as a space-delimited list: feature1 value1 feature2 value2...")
parser.add_argument("--configFileName", default="/tmp/consume.xml", help="configuration file name for AugustusPMMLConsumer job")
parser.add_argument("--planeFileName", default="/tmp/plane.csv", help="points on the plane to score")
parser.add_argument("--outputFileName", default="/tmp/scores.xml", help="file name for AugustusPMMLConsumer output")
args = parser.parse_args()

try:
    args.at = zip(args.at[::2], map(float, args.at[1::2]))
except:
    raise TypeError, "Argument 'at' is not formatted properly."

unitable = inspect(args.csv)
augustus = ScorePlane(args.pmml, unitable, featureX=args.featureX, xmin=args.xmin, xmax=args.xmax, featureY=args.featureY, ymin=args.ymin, ymax=args.ymax, othervalue=dict(args.at), configFileName=args.configFileName, planeFileName=args.planeFileName, outputFileName=args.outputFileName)
augustus.score()

draw(augustus.plot, fileName=args.svg)
